---
- name: Get current source
  shell: firewall-offline-cmd --list-sources{% if item.zone is defined %} --zone={{ item.zone }}{% endif %}{% if item.permanent | default(False) %}{% endif %}
  register: sources_list
  when: item.immediate | default(True) or item.permanent | default(False)
  with_items: "{{ shhirose_firewalld.sources | default([]) }}"
  changed_when: False

# firwalld module is not supported non-permanent of source
- name: Add source
  shell: firewall-cmd --add-source={{ item.item.source }}{% if item.item.zone is defined %} --zone={{ item.item.zone }}{% endif %}
  when:
   - item.item.immediate | default(True)
   - item.item.state == "enabled"
   - item.item.source not in item.stdout
   - ansible_facts.services.firewalld.state == 'started'
  with_items: "{{ sources_list.results | default([]) }}"

- name: Add source
  shell: firewall-offline-cmd --add-source={{ item.item.source }}{% if item.item.zone is defined %} --zone={{ item.item.zone }}{% endif %}
  when:
   - item.item.immediate | default(True)
   - item.item.state == "enabled"
   - item.item.source not in item.stdout
   - ansible_facts.services.firewalld.state != 'started'
  with_items: "{{ sources_list.results | default([]) }}"

# firwalld module is not supported non-permanent of source
- name: Remove source
  shell: firewall-cmd --remove-source={{ item.item.source }}{% if item.item.zone is defined %} --zone={{ item.item.zone }}{% endif %}
  when:
   - item.item.immediate | default(True)
   - item.item.state == "disabled"
   - item.item.source in item.stdout
   - ansible_facts.services.firewalld.state == 'started'
  with_items: "{{ sources_list.results | default([]) }}"

- name: Remove source
  shell: firewall-offline-cmd --remove-source={{ item.item.source }}{% if item.item.zone is defined %} --zone={{ item.item.zone }}{% endif %}
  when:
   - item.item.immediate | default(True)
   - item.item.state == "disabled"
   - item.item.source in item.stdout
   - ansible_facts.services.firewalld.state != 'started'
  with_items: "{{ sources_list.results | default([]) }}"

- name: Set source permanent
  firewalld:
    source: "{{ item.source }}"
    zone: "{{ item.zone | default(public) }}"
    immediate: "{{ item.immediate | default(ansible_facts.services.firewalld.state == 'started') }}"
    offline: "{{ item.offline | default(ansible_facts.services.firewalld.state != 'started') }}"
    permanent: "{{ item.permanent | default(False) }}"
    state: "{{ item.state }}"
  when: item.permanent | default(False)
  with_items: "{{ shhirose_firewalld.sources | default([]) }}"
